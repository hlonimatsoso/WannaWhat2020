@page "/"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;

<h1>Hello, Creepers!</h1>



Welcome to Kasi.

<SIgnalRDemo></SIgnalRDemo>

@* 
    SPA
    PWA
        Installs like an app
        Offline Capable
    Async
    Realtime
    Open ID compliant (Login with...)
    Social media ready
    Cryptofied
*@


<SurveyPrompt Title="How is Blazor working for you?" />

<SignalRClientDemo></SignalRClientDemo>

<UploadFile></UploadFile>

<div>
    Access Token:
    @if (AccessToken != null)
        @AccessToken
</div>

<div>
    <AuthorizeView>
        <Authorized>
            <IdentityId></IdentityId>

        </Authorized>
        <NotAuthorized>
            <div class="alert alert-warning" role="alert">
                Everything requires you to <a href="/authentication/login">Log In</a> first.
            </div>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code{
    [Inject]
    IAccessTokenProvider TokenProvider { get; set; }

    public string AccessToken { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var accessTokenResult = await TokenProvider.RequestAccessToken();

        AccessToken = string.Empty;

        if (accessTokenResult.TryGetToken(out var token))
        {
            AccessToken = token.Value;
        }
    }
}
